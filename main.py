import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats as stats
import numpy as np
from scipy.stats import norm
from matplotlib.ticker import MaxNLocator

data = pd.read_csv('telecom_churn.csv')
# print(data)
# print(data.to_string())
print(data.columns)
print(data.describe())
print(data.dtypes)

data['Account length'] = pd.to_numeric(data['Account length'], errors='coerce')
data['Area code'] = pd.to_numeric(data['Area code'], errors='coerce')
data['Number vmail messages'] = pd.to_numeric(data['Number vmail messages'], errors='coerce')
data['Total day calls'] = pd.to_numeric(data['Total day calls'], errors='coerce')
data['Total eve calls'] = pd.to_numeric(data['Total eve calls'], errors='coerce')
data['Total night calls'] = pd.to_numeric(data['Total night calls'], errors='coerce')
data['Total intl calls'] = pd.to_numeric(data['Total intl calls'], errors='coerce')
data['Customer service calls'] = pd.to_numeric(data['Customer service calls'], errors='coerce')

print(data.info())
print(data.isnull().sum())

state_counts = data['State'].value_counts(normalize=True) * 100
plt.figure(figsize=(10, 6))
sns.barplot(x=state_counts.index, y=state_counts.values)
plt.xlabel('Κατάσταση')
plt.ylabel('Ποσοστό (%)')
plt.title('Κατάσταση')
plt.xticks(rotation=90)
plt.show()

international_plan_counts = (data['International plan'].value_counts(normalize=True) * 100).sort_index()
plt.figure(figsize=(10, 6))
plt.bar(international_plan_counts.index, international_plan_counts.values, color='blue')
plt.xlabel('International Plan')
plt.ylabel('Ποσοστό (%)')
plt.title('Ποσοστό International Plan')
plt.xticks(rotation=90)
plt.show()

voice_mail_plan_counts = (data['Voice mail plan'].value_counts(normalize=True) * 100).sort_index()
plt.figure(figsize=(10, 6))
plt.bar(voice_mail_plan_counts.index, voice_mail_plan_counts.values, color='green')
plt.xlabel('Voice Mail Plan')
plt.ylabel('Ποσοστό (%)')
plt.title('Ποσοστό Voice Mail Plan')
plt.xticks(rotation=90)
plt.show()

churn_counts = (data['Churn'].value_counts(normalize=True) * 100).sort_index()
plt.figure(figsize=(6, 6))
plt.pie(churn_counts.values, labels=churn_counts.index, autopct='%1.1f%%', startangle=140)
plt.title('Ποσοστό Churn')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Account length'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Account length']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Account length']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Μήκος Λογαριασμού')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Μήκους Λογαριασμού')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Account length'], dist='norm', plot=plt)
plt.title('QQ-plot για Μήκος Λογαριασμού')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Area code'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Area code']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Area code']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Κωδικός Περιοχής')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Κωδικού Περιοχής')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Area code'], dist='norm', plot=plt)
plt.title('QQ-plot για Κωδικό Περιοχής')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total day minutes'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total day minutes']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total day minutes']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολικά Λεπτά Ημέρας')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Συνολικών Λεπτών Ημέρας')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total day minutes'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολικά Λεπτά Ημέρας')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total day calls'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total day calls']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total day calls']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολικά Τηλέφωνα Ημέρας')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Συνολικών Τηλεφώνων Ημέρας')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total day calls'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολικά Τηλέφωνα Ημέρας')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total day charge'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total day charge']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total day charge']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολική Χρέωση Ημέρας')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Συνολικής Χρέωσης Ημέρας')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total day charge'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολική Χρέωση Ημέρας')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total eve calls'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total eve calls']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total eve calls']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολικά Τηλέφωνα Απογεύματος')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Συνολικών Τηλεφώνων Απογεύματος')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total eve calls'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολικά Τηλέφωνα Απογεύματος')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total eve minutes'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total eve minutes']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total eve minutes']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολικά Λεπτά Απογεύματος')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Συνολικών Λεπτών Απογεύματος')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total eve minutes'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολικά Λεπτά Απογεύματος')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total eve charge'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total eve charge']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total eve charge']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολική Χρέωση Απογεύματος')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Συνολικής Χρέωσης Απογεύματος')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total eve charge'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολική Χρέωση Απογεύματος')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total night minutes'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total night minutes']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total night minutes']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολικά Λεπτά το Βράδυ')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Συνολικών Λεπτών το Βράδυ')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total night minutes'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολικά Λεπτά το Βράδυ')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total night calls'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total night calls']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total night calls']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολικά Τηλέφωνα το Βράδυ')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Συνολικών Τηλεφώνων το Βράδυ')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total night calls'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολικά Τηλέφωνα το Βράδυ')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total night charge'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total night charge']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total night charge']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολική Χρέωση το Βράδυ')
plt.ylabel('Συχνότητα')
plt.title('Κατανομή Συνολικής Χρέωσης το Βράδυ')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total night charge'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολική Χρέωση το Βράδυ')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total intl calls'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total int calls']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total intl calls']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολικός Αριθμός Διεθνών κλήσεων')
plt.ylabel('Συχνότητα')
plt.title('Συνολικός Αριθμός Διεθνών κλήσεων')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total intl calls'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολικό Αριθμό Διεθνών κλήσεων')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total intl minutes'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total int minutes']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total intl minutes']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολικά Λεπτά Διεθνών Κλήσεων')
plt.ylabel('Συχνότητα')
plt.title('Συνολικά Λεπτά Διεθνών κλήσεων')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total intl minutes'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολικά Λεπτά Διεθνών κλήσεων')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Total intl charge'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Total int charge']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Total intl charge']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολική Χρέωση Διεθνών Κλήσεων')
plt.ylabel('Συχνότητα')
plt.title('Συνολική Χρέωση Διεθνών κλήσεων')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Total intl charge'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολική Χρέωση Διεθνών κλήσεων')
plt.show()

plt.figure(figsize=(10, 6))
plt.hist(data['Customer service calls'], bins=30, color='gray', alpha=0.7, edgecolor='black')
plt.axvline(np.mean(data['Customer.service.calls']), color='red', linestyle='dashed', linewidth=2, label='Μέση')
plt.axvline(np.median(data['Customer service calls']), color='blue', linestyle='dashed', linewidth=2, label='Διάμεσο')
plt.xlabel('Συνολικός Αριθμός Τηλεφώνων προς την Εξυπηρέτηση Πελατών')
plt.ylabel('Συχνότητα')
plt.title('Συνολικός Αριθμός Τηλεφώνων προς την Εξυπηρέτηση Πελατών')
plt.legend()
plt.show()
plt.figure(figsize=(8, 6))
stats.probplot(data['Customer service calls'], dist='norm', plot=plt)
plt.title('QQ-plot για Συνολικό Αριθμό Τηλεφώνων προς την Εξυπηρέτηση Πελατών')
plt.show()


